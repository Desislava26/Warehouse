@using Microsoft.AspNetCore.Identity
@using Warehouse.Core.Models
@using Warehouse.Infrastructure.Data.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@{
    var user = await UserManager.GetUserAsync(User);
    string imgDataURL = "";
    if (user.ProfilePicture == null)
    {
        imgDataURL = "~/img/avatar2.png";
    }
    else
    {
        string imgeBase64Data = Convert.ToBase64String(user.ProfilePicture);
        imgDataURL = string.Format("data:image/png;base64,{0}", imgeBase64Data);
    }
}



@*<ul class="navbar-nav">*@
@if (SignInManager.IsSignedIn(User))
{
    @*<li class="nav-item">
        <a  class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name!</a>
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>*@
        <!-- Sidebar user panel (optional) -->
        <div class="user-panel mt-3 pb-3 mb-3 d-flex">
            <div class="image">
            <img src="@imgDataURL" class="img-circle elevation-2" alt="User Image">
            </div>
            <div class="info">
                <a href="~/User/UserProfile" class="d-block">@User.Identity.Name</a> @*! Remember for me: Use the ~*@
            </div>
        </div>
}
@*else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>*@
